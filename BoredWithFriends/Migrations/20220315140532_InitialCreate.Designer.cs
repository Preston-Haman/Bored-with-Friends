// <auto-generated />
using System;
using BoredWithFriends.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoredWithFriends.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220315140532_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BoredWithFriends.Models.PlayerLogin", b =>
                {
                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PlayerID");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("PlayerLogins");
                });

            modelBuilder.Entity("BoredWithFriends.Models.PlayerStatistics", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerID"), 1L, 1);

                    b.Property<DateTime>("LastPlayedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<int>("RoundsPlayed")
                        .HasColumnType("int");

                    b.Property<long>("TotalPlayTime")
                        .HasColumnType("bigint");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.ToTable("PlayerStatistics");
                });

            modelBuilder.Entity("BoredWithFriends.Models.PlayerLogin", b =>
                {
                    b.HasOne("BoredWithFriends.Models.PlayerStatistics", "PlayerStatisticsID")
                        .WithMany()
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerStatisticsID");
                });
#pragma warning restore 612, 618
        }
    }
}
